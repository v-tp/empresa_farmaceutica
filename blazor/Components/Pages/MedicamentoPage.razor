@page "/medicamento"
@using BlazorGestaoProdutos.Data
@using BlazorGestaoProdutos.Services

@inject IMedicamentoService medicamentoService

<PageTitle>Medicamentos</PageTitle>

<h1>Medicamentos</h1>

<!-- Botão para mostrar ou esconder o formulário -->
<button class="btn btn-primary mb-3" @onclick="ToggleFormularioCadastro">
    @(mostrarFormularioCadastro ? "Cancelar Cadastro" : "Cadastrar Novo Medicamento")
</button>

@if (mostrarFormularioCadastro)
{
    <!-- Formulário de Cadastro -->
    <div class="card p-3 mb-4">
        <h3>Cadastrar Novo Medicamento</h3>
        <div class="mb-2">
            <label for="nome">Nome:</label>
            <input id="nome" class="form-control" @bind="novoMedicamento.Nome" />
        </div>
        <div class="mb-2">
            <label for="descricao">Descrição:</label>
            <input id="descricao" class="form-control" @bind="novoMedicamento.Descricao" />
        </div>
        <div class="mb-2">
            <label for="valor">Valor:</label>
            <input id="valor" type="number" class="form-control" @bind="novoMedicamento.Valor" />
        </div>
        <div class="mb-2">
            <label for="qtdEstoque">Quantidade em Estoque:</label>
            <input id="qtdEstoque" type="number" class="form-control" @bind="novoMedicamento.QtdEstoque" />
        </div>
        <div>
            <button class="btn btn-success me-2" @onclick="CadastrarMedicamento">Cadastrar</button>
            <button class="btn btn-secondary" @onclick="ToggleFormularioCadastro">Cancelar</button>
        </div>
    </div>
}

@if (medicamentos == null)
{
    <p><em>Carregando...</em></p>
}
else if (!medicamentos.Any())
{
    <p><em>Não há medicamentos disponíveis.</em></p>
}
else
{
    <!-- Tabela com os medicamentos cadastrados -->
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nome</th>
                <th>Descrição</th>
                <th>Valor</th>
                <th>Quantidade em estoque</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var medicamento in medicamentos)
            {
                <tr>
                    <td>@medicamento.Id</td>
                    <td>@medicamento.Nome</td>
                    <td>@medicamento.Descricao</td>
                    <td>@medicamento.Valor</td>
                    <td>@medicamento.QtdEstoque</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => ExcluirMedicamento(medicamento)">
                            Excluir
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code
{
    private List<Medicamento>? medicamentos { get; set; }
    private Medicamento novoMedicamento = new Medicamento();
    private bool mostrarFormularioCadastro = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            medicamentos = await medicamentoService.GetMedicamentos();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao buscar os medicamentos: {ex.Message}");
        }
    }

    private void ToggleFormularioCadastro()
    {
        mostrarFormularioCadastro = !mostrarFormularioCadastro;
        if (!mostrarFormularioCadastro)
        {
            novoMedicamento = new Medicamento(); // Reseta os campos ao cancelar
        }
    }

    private async Task CadastrarMedicamento()
    {
        try
        {
            await medicamentoService.CadastrarMedicamento(novoMedicamento);
            medicamentos = await medicamentoService.GetMedicamentos();
            ToggleFormularioCadastro(); // Fecha o formulário
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao cadastrar medicamento: {ex.Message}");
        }
    }

    private async Task ExcluirMedicamento(Medicamento m)
    {
        await medicamentoService.DeletarMedicamento(m);
        medicamentos = await medicamentoService.GetMedicamentos();
    }
}
